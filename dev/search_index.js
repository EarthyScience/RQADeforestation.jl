var documenterSearchIndex = {"docs":
[{"location":"#RQADeforestation","page":"Home","title":"RQADeforestation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for RQADeforestation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#RQADeforestation.countvalid-Tuple{Any, Any}","page":"Home","title":"RQADeforestation.countvalid","text":"countvalid(xout, xin)\n\nInner function to count the valid time steps in a datacube.\nThis function is aimed to be used inside of a mapCube call.\n\n\n\n\n\n","category":"method"},{"location":"#RQADeforestation.countvalid-Tuple{Any}","page":"Home","title":"RQADeforestation.countvalid","text":"countvalid(cube)\n\nOuter function to count the number of valid time steps in a cube.\n\n\n\n\n\n","category":"method"},{"location":"#RQADeforestation.gdalcube-Tuple{Any, Any}","page":"Home","title":"RQADeforestation.gdalcube","text":"gdalcube(indir, pol)\n\nLoad the datasets in indir with a polarisation pol as a ESDLArray. We assume, that indir is a folder with geotiffs in the same CRS which are mosaicked into timesteps and then stacked as a threedimensional array.\n\n\n\n\n\n","category":"method"},{"location":"#RQADeforestation.grouptimes","page":"Home","title":"RQADeforestation.grouptimes","text":"grouptimes(times, timediff=200000) Group a sorted vector of time stamps into subgroups where the difference between neighbouring elements are less than timediff milliseconds. This returns the indices of the subgroups as a vector of vectors.\n\n\n\n\n\n","category":"function"},{"location":"#RQADeforestation.rqatrend","page":"Home","title":"RQADeforestation.rqatrend","text":"rqatrend(xout, xin, thresh)\n\nCompute the RQA trend metric for the non-missing time steps of xin, and save it to xout.  thresh specifies the epsilon threshold of the Recurrence Plot computation\n\n\n\n\n\n","category":"function"},{"location":"#RQADeforestation.rqatrend-Tuple{AbstractString}","page":"Home","title":"RQADeforestation.rqatrend","text":"rqatrend(path::AbstractString; thresh=2, outpath=tempname()*\".zarr\")\n\nCompute the RQA trend metric for the data that is available on path.\n\n\n\n\n\n","category":"method"},{"location":"#RQADeforestation.rqatrend-Tuple{Any}","page":"Home","title":"RQADeforestation.rqatrend","text":"rqatrend(cube;thresh=2, path=tempname() * \".zarr\")\n\nCompute the RQA trend metric for the datacube cube with the epsilon threshold thresh.\n\n\n\n\n\n","category":"method"},{"location":"#RQADeforestation.smooth-Tuple{Any, Any, Any}","page":"Home","title":"RQADeforestation.smooth","text":"smooth(a, b, γ)\n\nWeighted average of a and b with weight γ.\n\n(1 - γ) * a + γ * b\n\n\n\n\n\n","category":"method"}]
}
